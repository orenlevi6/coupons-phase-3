# MySQL details -
# URL of Database
#spring.datasource.url=jdbc:mysql://localhost:3306/coupons_spring?createDatabaseIfNotExist=true\
#  &serverTimezone=Asia/Jerusalem

# MySQL Username
#spring.datasource.username=root

# MySQL Password
#spring.datasource.password=12345678

# Driver for MySQL
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Dialect - The language spring uses to communicate with MySQL
#spring.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Heroku PostgreSQL details -
# URL of Database
spring.datasource.url=jdbc:postgres://ec2-3-248-121-12.eu-west-1.compute.amazonaws.com:5432/d44lb16nhe597j?sslmode=require

# PostgreSQL Username
spring.datasource.username=dxnfmmbmxpxxic

# PostgreSQL password
spring.datasource.password=31c77dade498c599dfe27dbb4fae30b9000791460dabb2e09a81f838eefe9ce5

# Driver for PostgreSQL
spring.datasource.driver-class-name=org.postgresql.Driver

# Dialect - The language spring uses to communicate with PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# DDL - How to work with the database
# Update - Create the tables and keep the data
# Create-Drop - Create the tables but erase the tables upon exit
spring.jpa.hibernate.ddl-auto=update

# Enable lazy load
spring.properties.hibernate.enable_lazy_load_no_trans=true

# Show SQL commands
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

# How we will work
spring.profiles.active=production

# To use spring swagger web
spring.mvc.pathmatch.matching-strategy=ant-path-matcher
#swagger.host.url=http://localhost:8080 (Default Port)

#server.servlet.context-path=
server.port=${PORT:8080}
